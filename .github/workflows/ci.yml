name: whoheplayfor

on:
  release:
    types: [published]
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 12 * * *'

jobs:
  build:
    name: Test & Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: [10, 12, 14]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm ci
      - name: Run Linting
        run: npm run lint
      - name: Run Build
        run: npm run build:prod
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Setup Node
        uses: actions/setup-node@v1
      - name: Install dependencies
        run: npm ci
      - name: Run Build
        run: npm run build:prod
      - name: Set Git Configuration
        run: |
          REMOTE="https://${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}"
          git config --global user.name "${GH_NAME}"
          git config --global user.email "${GH_EMAIL}"
          git remote set-url origin ${REMOTE}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_NAME: ${{ secrets.GH_NAME }}
          GH_EMAIL: ${{ secrets.GH_EMAIL }}
      - name: Deploy to GitHub Pages
        run: npm run deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
