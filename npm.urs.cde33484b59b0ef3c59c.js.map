{"version":3,"sources":["webpack:///./node_modules/urs/dist/useRefState.js"],"names":["Object","defineProperty","exports","value","react_1","isObject","obj","prototype","toString","call","useRefState","initialState","blockIfUnmounted","mounted","useRef","useEffect","current","useMounted","_a","useState","reactState","setReactState","state","setState","useCallback","arg","default"],"mappings":"uFACAA,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAIC,EAAU,EAAQ,GAKtBF,EAAQG,SAAW,SAAUC,GAAO,MAA+C,oBAAxCN,OAAOO,UAAUC,SAASC,KAAKH,IAW1E,SAASI,EAAYC,EAAcC,QACN,IAArBA,IAA+BA,GAAmB,GACtD,IAAIC,EAZS,WACb,IAAIA,EAAUT,EAAQU,QAAO,GAO7B,OANAV,EAAQW,WAAU,WAEd,OADAF,EAAQG,SAAU,EACX,WACHH,EAAQG,SAAU,KAEvB,IACIH,EAIOI,GACVC,EAAKd,EAAQe,SAASR,GAAeS,EAAaF,EAAG,GAAIG,EAAgBH,EAAG,GAC5EI,EAAQlB,EAAQU,OAAOM,GACvBG,EAAWnB,EAAQoB,aAAY,SAAUC,IACpCZ,EAAQG,SAAWJ,IAExBU,EAAMN,QAA0B,mBAARS,EAAsBA,EAAIH,EAAMN,SAAWS,EACnEJ,EAAcC,EAAMN,YACrB,IACH,MAAO,CAACM,EAAOC,GAEnBrB,EAAQQ,YAAcA,EACtBR,EAAQwB,QAAUhB","file":"npm.urs.cde33484b59b0ef3c59c.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\n/**\n * Determines if the given param is an object. {}\n * @param obj\n */\nexports.isObject = function (obj) { return Object.prototype.toString.call(obj) === '[object Object]'; }; // eslint-disable-line\nvar useMounted = function () {\n    var mounted = react_1.useRef(false);\n    react_1.useEffect(function () {\n        mounted.current = true;\n        return function () {\n            mounted.current = false;\n        };\n    }, []);\n    return mounted;\n};\nfunction useRefState(initialState, blockIfUnmounted) {\n    if (blockIfUnmounted === void 0) { blockIfUnmounted = true; }\n    var mounted = useMounted();\n    var _a = react_1.useState(initialState), reactState = _a[0], setReactState = _a[1];\n    var state = react_1.useRef(reactState);\n    var setState = react_1.useCallback(function (arg) {\n        if (!mounted.current && blockIfUnmounted)\n            return;\n        state.current = (typeof arg === 'function') ? arg(state.current) : arg;\n        setReactState(state.current);\n    }, []);\n    return [state, setState];\n}\nexports.useRefState = useRefState;\nexports.default = useRefState;\n"],"sourceRoot":""}